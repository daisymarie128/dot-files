" Maintainer: Daisy Smith <daisymarie128@gmail.com>

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

" load vim-plug
source ~/.vim/autoload/plug.vim

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" =================================
"
"  Plugins:
" =================================

Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/syntastic'
Plug 'vim-airline/vim-airline-themes'
Plug 'valloric/youcompleteme'
Plug 'pangloss/vim-javascript'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'plasticboy/vim-markdown'
Plug 'flazz/vim-colorschemes'

" Initialize plugin system
call plug#end()

" filetype plugin indent on

syntax on
set smartindent
set hlsearch
set incsearch " search as characters are entered

set number
set cursorline  " highlight current line
colorscheme mine

" Save swap files into seperate folder
set undodir=~/.vim/.undo//
set backupdir=~/.vim/.backup//
set directory=~/.vim/.swp//

set clipboard=unnamed " use os clipboard
set foldmethod=indent
set foldlevel=20

set shiftwidth=2 " number of spaces when shift indenting
set tabstop=2 " number of visual spaces per tab
set softtabstop=2 " number of spaces in tab when editing

" =================
" Airline theme
" =================
let g:airline_theme = 'mine'
let g:airline_powerline_fonts = 1
set t_Co=256
:set termguicolors

"==================
" KEY BINDINGS
" ================

let mapleader = "\<Space>"
nnoremap <leader>o o<Esc>
nnoremap <leader>o o<Esc>
nnoremap x "_x
nnoremap <Leader>q :Bdelete<CR>
nnoremap <Tab> :bn<CR>
nnoremap <S-Tab> :bp<CR>
if has('nvim')
nmap <BS> <C-W>h
endif

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Search regex in multiple files
:nnoremap gR :grep "\<<cword>\>" *<CR>
:nnoremap GR :grep "\<<cword>\>" %:p:h/*<CR>

"==================
" Nerdtree
" ================

:set modifiable
 au VimEnter *  NERDTree
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeMouseMode=2
let NERDTreeAutoDeleteBuffer=1
let NERDTreeDirArrows = 1
let NERDTreeIgnore = ['\.pyc$']
noremap <leader>f :NERDTreeToggle<CR>

" prevent buffer next, previous and delete when focused on Nerdtree
autocmd FileType nerdtree nnoremap <buffer> <Tab> <nop>
autocmd FileType nerdtree nnoremap <buffer> <S-Tab> <nop>
autocmd FileType nerdtree nnoremap <buffer> <C-q> :NERDTreeToggle<CR>
autocmd FileType nerdtree nnoremap <buffer> <C-p> <nop>
autocmd FileType nerdtree nnoremap <buffer> <Leader>p <nop>



" Initialize plugin system
" call plug#end()
